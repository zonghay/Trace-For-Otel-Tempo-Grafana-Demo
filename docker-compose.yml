version: '3'

services:
  # Prometheus 服务
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - monitoring

  # Grafana 服务
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      # 添加 Tempo 数据源的预配置
      - GF_INSTALL_PLUGINS=grafana-tempo-datasource
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - tempo  # 修改依赖项从 prometheus 到 tempo

  # OpenTelemetry Collector 服务
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector/config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
      - "8888:8888"   # Metrics endpoint
      - "8889:8889"   # Prometheus exporter
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - tempo  # 修改依赖项从 prometheus 到 tempo

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
      - ./tempo/data:/var/tempo/data  # 使用本地目录
    environment:
      - TEMPO_STORAGE_TRACE_BACKEND=local
      - TEMPO_STORAGE_TRACE_LOCAL_PATH=/var/tempo/data
    ports:
      - "3200:3200"
      - "14317:4317"
    networks:
      - monitoring

volumes:
  tempo_data:
  prometheus_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge